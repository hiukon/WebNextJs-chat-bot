'use client';
import { useEffect, useState } from 'react';
import Image from 'next/image';
import { ICartItem } from '../types/backend';


const Checkout = () => {
    const [cart, setCart] = useState<ICartItem | null>(null);
    const [payment, setPayment] = useState<string>('card');
    const [mode, setMode] = useState<'delivery' | 'pickup'>('delivery');
    const [agreed, setAgreed] = useState(false);

    useEffect(() => {
        const data = localStorage.getItem("cart");
        if (data) {
            setCart(JSON.parse(data));
        }
    }, []);
    if (!cart) return <div>loading</div>;
    const toppingText = cart.toppings.map(t => `${t.name} x${t.count}`).join(', ');
    const handleCheckout = async () => {
        if (!cart) return;

        const orderData = {
            userId: '1',
            paymentMethod: payment,
            items: [
                {
                    productId: cart.productId,
                    productName: cart.name,
                    productImage: cart.image,
                    quantity: cart.quantity || 1,
                    unitPrice: cart.price,
                    totalPrice: cart.total,
                    options: {
                        size: cart.size,
                        toppings: cart.toppings.map(t => t.name),
                    },
                },
            ],
        };

        try {
            const res = await fetch('http://localhost:3000/api/orders', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(orderData),
            });

            const data = await res.json();

            if (res.ok) {
                alert(' ƒê·∫∑t h√†ng th√†nh c√¥ng!');
                localStorage.removeItem('cart');
            } else {
                alert(` L·ªói: ${data.message}`);
            }
        } catch (error) {
            console.error('L·ªói khi g·ª≠i ƒë∆°n h√†ng:', error);
            alert('G·ª≠i ƒë∆°n h√†ng th·∫•t b·∫°i!');
        }
    };


    return (
        <div className="flex flex-col md:flex-row p-6 justify-center mt-8">

            <div className='w-full md:w-1/3 h-[700px] pr-4 space-y-6 border border-black rounded-lg p-4 m-3'>
                <header className='flex items-center justify-between bg-white    '>
                    <button onClick={() => setMode('delivery')} className={`items-center justify-between w-[50%] ${mode === 'delivery' ? 'border-b-4 border-green-600' : ''} p-2`}>
                        <p className='hover:text-green-700 font-semibold text-gray-500'>Giao H√†ng</p>
                    </button>
                    <button onClick={() => setMode('pickup')} className={`items-center justify-between w-[50%]  p-2 ${mode === 'pickup' ? 'border-b-4 border-green-600' : ''} p-2`}>
                        <p className='hover:text-green-700 font-semibold text-gray-500'> ƒê·∫øn L·∫•y</p>
                    </button>
                </header>
                {mode === 'delivery' && (
                    <div className='m-4 flex-1'>
                        <div className='mb-4' >
                            <h3 className="text-xl text-green-700 " > ƒê·ªãa ch·ªâ</h3>
                            <p>11 P. Nguy·ªÖn H·ªØu Hu√¢n, L√Ω Th√°i T·ªï, Ho√†n Ki·∫øm, H√† N·ªôi, Vietnam</p>
                        </div>
                        <div className='mb-4'>
                            <p className=' text-green-700'>Tr·∫ßn Hi·∫øu</p>
                            <p> S·ªë ƒëi·ªán tho·∫°i: 0353719778</p>
                        </div>
                        <div className='mb-4'>
                            <h3 className="text-xl  text-green-700"> Th·ªùi gian nh·∫≠n h√†ng</h3>
                            <p>Ch·ªçn th·ªùi gian giao h√†ng</p>
                        </div>
                        <div className='mb-4'>
                            <h3 className="text-xl  text-green-700"> Ghi ch√∫</h3>
                            <input type="text" className="w-full border p-2 rounded" placeholder="Ghi ch√∫ cho c·ª≠a h√†ng..." />
                        </div>
                        <div className='mb-4'>
                            <h3 className=" text-xl  text-green-700"> H√≥a ƒë∆°n VAT</h3>
                            <p className="text-sm text-gray-700">- Vui l√≤ng xem h∆∞·ªõng d·∫´n xu·∫•t h√≥a ƒë∆°n t·ª´ h√≥a ƒë∆°n gi·∫•y ƒëi k√®m m√≥n n∆∞·ªõc.</p>
                            <p className="text-sm text-gray-700">- Tr∆∞·ªùng h·ª£p kh√¥ng nh·∫≠n ƒë∆∞·ª£c ho√° ƒë∆°n gi·∫•y, vui l√≤ng li√™n h·ªá Hotline CSKH: 1900234518 (nh·∫•n ph√≠m 1) ho·∫∑c Fanpage: Phuc Long Coffee & Tea t·ª´ 8h00 - 17h45 ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ nh√©</p>
                        </div>
                    </div>
                )}
                {mode === 'pickup' && (
                    <div className='m-4 flex-1'>
                        <div className='mb-4'>
                            <p className="font-semibold text-green-700">BDG-CH 44 Nguyen Dinh Chieu P.PC</p>
                            <p className="text-gray-700">
                                ƒê·ªãa ch·ªâ: 44 Nguy·ªÖn ƒê√¨nh Chi·ªÉu, P. Ph√∫ C∆∞·ªùng, TP. Th·ªß D·∫ßu M·ªôt, T. B√¨nh D∆∞∆°ng
                            </p>
                            <p className="text-gray-700">S·ªë ƒëi·ªán tho·∫°i: (028) 7100 1968 (Ext.20028)</p>
                            <p className="text-gray-700">Gi·ªù ho·∫°t ƒë·ªông: 07:00 - 22:30</p>
                            <p className="text-green-600 font-semibold">Tr·∫°ng th√°i ho·∫°t ƒë·ªông: M·ªü c·ª≠a</p>
                        </div>
                        <div className='mb-4'>
                            <p className=' text-green-700'>Tr·∫ßn Hi·∫øu</p>
                            <p> S·ªë ƒëi·ªán tho·∫°i: 0353719778</p>
                        </div>
                        <div className='mb-4'>
                            <h3 className="text-xl  text-green-700"> Th·ªùi gian nh·∫≠n h√†ng</h3>
                            <p>Ch·ªçn th·ªùi gian giao h√†ng</p>
                        </div>
                        <div className='mb-4'>
                            <h3 className="text-xl  text-green-700"> Ghi ch√∫</h3>
                            <input type="text" className="w-full border p-2 rounded" placeholder="Ghi ch√∫ cho c·ª≠a h√†ng..." />
                        </div>
                        <div className='mb-4'>
                            <h3 className=" text-xl  text-green-700"> H√≥a ƒë∆°n VAT</h3>
                            <p className="text-sm text-gray-700">- Vui l√≤ng xem h∆∞·ªõng d·∫´n xu·∫•t h√≥a ƒë∆°n t·ª´ h√≥a ƒë∆°n gi·∫•y ƒëi k√®m m√≥n n∆∞·ªõc.</p>
                            <p className="text-sm text-gray-700">- Tr∆∞·ªùng h·ª£p kh√¥ng nh·∫≠n ƒë∆∞·ª£c ho√° ƒë∆°n gi·∫•y, vui l√≤ng li√™n h·ªá Hotline CSKH: 1900234518 (nh·∫•n ph√≠m 1) ho·∫∑c Fanpage: Phuc Long Coffee & Tea t·ª´ 8h00 - 17h45 ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ nh√©</p>
                        </div>
                    </div>
                )}
            </div>
            <div className="w-full md:w-1/3 h-[700px] pr-4 space-y-6 border border-black rounded-lg p-4 m-3">
                <h3 className="text-lg font-bold text-green-700 border-b-2 border-gray-300 mt-3">üõí Gi·ªè h√†ng c·ªßa b·∫°n</h3>
                <div className="flex items-center  space-x-4 ">
                    <Image src={cart.image} alt={cart.name} width={80} height={80} />
                    <div className=''>
                        <p>{cart.name} (Size {cart.size})</p>
                        <p className="text-sm text-gray-500">{toppingText}</p>
                        <p className="font-semibold">{cart.total.toLocaleString()} ‚Ç´</p>
                    </div>
                </div>
                <div className="mt-6">
                    <h4 className="font-semibold text-green-700 ">Th√¥ng tin thanh to√°n</h4>
                    <p>T·ªïng ti·ªÅn t·∫°m t√≠nh: {cart.total.toLocaleString()} ‚Ç´</p>
                    <p>Ph√≠ v·∫≠n chuy·ªÉn:  ‚Ç´</p>
                    <p>M√£ gi·∫£m gi√°:  ‚Ç´</p>
                    <p>T·ªïng ti·ªÅn:  ‚Ç´</p>
                </div>

                <div className="mt-6">
                    <h4 className="font-semibold text-green-700">Ph∆∞∆°ng th·ª©c thanh to√°n</h4>
                    <div className="space-y-2 mt-2">
                        <label className="block">
                            <input type="radio" name="payment" checked={payment === 'cod'} onChange={() => setPayment('cod')} />
                            {' '}Thanh to√°n khi nh·∫≠n h√†ng
                        </label>
                        <label className="block">
                            <input type="radio" name="payment" checked={payment === 'card'} onChange={() => setPayment('card')} />
                            {' '}Th·∫ª ng√¢n h√†ng/Th·∫ª t√≠n d·ª•ng
                        </label>
                        <label className="block">
                            <input type="radio" name="payment" checked={payment === 'momo'} onChange={() => setPayment('momo')} />
                            {' '}V√≠ MoMo
                        </label>
                        <label className="block">
                            <input type="radio" name="payment" checked={payment === 'zalo'} onChange={() => setPayment('zalo')} />
                            {' '}V√≠ ZaloPay
                        </label>
                        <label className="block">
                            <input type="radio" name="payment" checked={payment === 'shopee'} onChange={() => setPayment('shopee')} />
                            {' '}V√≠ ShopeePay
                        </label>
                    </div>
                </div>
                <div className="mt-4">
                    <label className="flex items-center space-x-2">
                        <input
                            type="checkbox"
                            checked={agreed}
                            onChange={(e) => setAgreed(e.target.checked)}
                        />
                        <span>
                            T√¥i ƒë·ªìng √Ω v·ªõi{' '}
                            <a href="#" className="text-green-700 underline">
                                ƒëi·ªÅu kho·∫£n v√† ch√≠nh s√°ch
                            </a>
                        </span>
                    </label>

                    <button
                        disabled={!agreed}
                        onClick={handleCheckout}
                        className={`mt-4 w-full py-2 rounded-lg font-bold shadow
    ${agreed ? 'bg-green-700 text-white' : 'bg-gray-300 text-white cursor-not-allowed'}
  `}
                    >
                        Ti·∫øn h√†nh thanh to√°n
                    </button>

                </div>
            </div>
        </div>
    );
};


export default Checkout;
